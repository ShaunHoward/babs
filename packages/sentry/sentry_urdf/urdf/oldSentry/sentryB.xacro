<?xml version="1.0"?>
<robot 
     xmlns:xacro="http://www.ros.org/wiki/xacro" name="sentry">
     <!-- define the base-link origin to lie at floor level, between the drive wheels-->
     <!--main body is a simple box; origin is a center of box-->
    <xacro:property name="bodylen" value="1.0" />
    <xacro:property name="bodywidth" value="0.3" />
    <xacro:property name="bodyheight" value="0.6" />
    <xacro:property name="bodyclearance" value="0.4" />  <!--clearance from bottom of box to ground-->  
    <!-- placement of main body relative to base link frame -->
    <xacro:property name="bodyOX" value="${-half_bodylen}" />  
    <xacro:property name="bodyOY" value="0" />   
    <xacro:property name="bodyOZ" value="0.45" />
            
    <!-- define the wheel dimensions-->
    <xacro:property name="tirediam" value="0.2" />
    <xacro:property name="tirerad" value="${tirediam/2.0}" />    
    <xacro:property name="tirewidth" value="0.2" />

    <xacro:property name="bigtirediam" value="0.27" />
    <xacro:property name="bigtirerad" value="${bigtirediam/2.0}" />    
    <xacro:property name="bigtirewidth" value="0.2" />
    <!-- "track" is the distance between the wheels -->
    <xacro:property name="track" value=".52" />

    <xacro:property name="tinywheelspacing" value=".005" />
    <!-- spacing between wheels on the same side -->
    <xacro:property name="wheelspacing" value="${(bodylen - 4*tirediam - tinywheelspacing)/3}" />

    <!-- battery box dimensions -->
    <xacro:property name="batterylen" value="0.381" />
    <xacro:property name="batterywidth" value="0.3556" />
    <xacro:property name="batteryheight" value="0.254" />
    <!-- placement of battery box relative to base frame -->
    <xacro:property name="batOX" value="-0.05" />  
    <xacro:property name="batOY" value="0" />   
    <xacro:property name="batOZ" value="0.22" />   


    <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="boschwidth" value="0.0381" />
    <xacro:property name="casterdrop" value="0.125" />
    <xacro:property name="bracketwidth" value="0.1175" />
    <xacro:property name="bracketheight" value="0.16" />
    <xacro:property name="bracketthick" value="0.0508" />
    <xacro:property name="bracketangle" value="0.7854" />
    <xacro:property name="casterwidth" value="0.0826" />
    <xacro:property name="casterdiam" value="0.2286" />
    
    <!--here is a default inertia matrix with small, but legal values; use this when don't need accuracy for I -->
    <!--model will assign inertia matrix dominated by main body box -->
    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="0.01" ixy="0.0" ixz="0.0"
         iyy="0.01" iyz="0.0"
         izz="0.01" />
        </inertial>
    </xacro:macro>
    <!-- left = 1 if its the left wheel -1 if its the right wheel. displacement says how back/forward 
    the wheel is from the center-->
    <xacro:macro name="wheel" params="prefix left displacement">
        <link name="${prefix}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${tirerad}" length="${tirewidth}"/>
                </geometry>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${tirerad}" length="${tirewidth}"/>
                </geometry>
            </collision>
            <inertial>
            <!--assign inertial properties to drive wheels -->
            <mass value="1" />
            <inertia ixx="0.1" ixy="0" ixz="0"
              iyy="0.1" iyz="0"
              izz="0.1" />
        </inertial>
        </link>
        <joint name="${prefix}_wheel_joint" type="continuous">
            <axis xyz="0 0 1"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel"/>
            
            <!--
            <origin xyz="0 ${left*track/2} ${tirerad}" rpy="0 ${M_PI/2} ${M_PI/2}"/>
            -->

            <origin xyz="${displacement} ${left*track/2} ${-bodyheight/2}" rpy="0 ${M_PI/2} ${M_PI/2}"/>

            <limit effort="100" velocity="15" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>
    </xacro:macro>

    <xacro:macro name="big_wheel" params="prefix left displacement">
        <link name="${prefix}_big_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${bigtirerad}" length="${bigtirewidth}"/>
                </geometry>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${bigtirerad}" length="${bigtirewidth}"/>
                </geometry>
            </collision>
            <inertial>
            <!--assign inertial properties to drive wheels -->
            <mass value="1.5" />
            <inertia ixx="0.1" ixy="0" ixz="0"
              iyy="0.1" iyz="0"
              izz="0.1" />
        </inertial>
        </link>
        <joint name="${prefix}_big_wheel_joint" type="continuous">
            <axis xyz="0 0 1"/>
            <parent link="base_link"/>
            <child link="${prefix}_big_wheel"/>
            <origin xyz="${displacement} ${left*track/2} ${bigtirerad}" rpy="0 ${M_PI/2} ${M_PI/2}"/>
            <limit effort="100" velocity="15" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>
    </xacro:macro>
   
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${bodylen} ${bodywidth} ${bodyheight}"/>
            </geometry>

            <!--
            <origin xyz="${bodyOX} ${bodyOY} ${bodyOZ}" rpy="0 0 0"/>
            -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </visual>
        <collision>
            <geometry>
                <box size="${bodylen} ${bodywidth} ${bodyheight}"/>
            </geometry>
            <!--
            <origin xyz="${bodyOX} ${bodyOY} ${bodyOZ}" rpy="0 0 0"/>
            -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
        <inertial>
            <!--assign almost all the mass to the main body box; set m= 100kg; treat I as approx m*r^2 -->
            <mass value="50" />
            <inertia ixx="10" ixy="0" ixz="0"
              iyy="10" iyz="0"
              izz="10" />
        </inertial>
    </link>


 
    <!-- front wheels -->
    <xacro:wheel prefix="left4" left="1" displacement="${(bodylen/2)}"/>
    <xacro:wheel prefix="right4" left="-1" displacement="${(bodylen/2)}"/>
    <xacro:wheel prefix="left3" left="1" displacement="${bodylen/2 - tirediam - wheelspacing}"/>
    <xacro:wheel prefix="right3" left="-1" displacement="${bodylen/2 - tirediam - wheelspacing)}"/>

    <!-- center two wheels -->
    <xacro:wheel prefix="left2" left="1" displacement="${bodylen/2 - 2*tirediam - 2*wheelspacing}"/>
    <xacro:wheel prefix="right2" left="-1" displacement="${bodylen/2 - 2*tirediam - 2*wheelspacing}"/>

    <!-- rear wheels -->
    <xacro:wheel prefix="left1" left="1" displacement="${-(bodylen/2 - tirediam - tinywheelspacing)}"/>
    <xacro:wheel prefix="right1" left="-1" displacement="${-(bodylen/2 - tirediam - tinywheelspacing)}"/>
    <xacro:wheel prefix="left0" left="1" displacement="${-bodylen/2}"/>
    <xacro:wheel prefix="right0" left="-1" displacement="${-bodylen/2}"/>

    <!-- big wheels -->
    <xacro:big_wheel prefix="leftbig" left="1" displacement="${-(bodylen/2 - 1.25*bigtirerad)}"/>
    <xacro:big_wheel prefix="rightbig" left="-1" displacement="${-(bodylen/2 - 1.25*bigtirerad)}"/>



    



    
    
 <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>100</updateRate>
    <leftJoint>right0_wheel_joint</leftJoint>
    <rightJoint>left0_wheel_joint</rightJoint>
    <wheelSeparation>${track}</wheelSeparation>
    <wheelDiameter>${tirediam}</wheelDiameter>
    <torque>200</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
    <publishWheelTF>true</publishWheelTF>
    <publishWheelJointState>true</publishWheelJointState>
  </plugin>
 </gazebo> 

</robot>